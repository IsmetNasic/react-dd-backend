{"version":3,"sources":["components/shared/hooks/http-hook.js","components/pages/HomePage/MainPage.js","components/pages/HomePage/Home.js","components/shared/Form.js","components/pages/RestaurantPage/CheckoutPage/Checkout.js","components/pages/RestaurantPage/FoodItem.js","components/pages/RestaurantPage/FoodList.js","components/shared/LoadingSpinner.js","components/pages/RestaurantPage/Restaurant.js","components/pages/AdminPage/Login.js","components/pages/AdminPage/Admin.js","components/pages/AdminPage/AdminData.js","App.js","index.js"],"names":["useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","MainPage","className","src","Home","restaurantsToRender","loadedRestaurants","setLoadedRestaurants","history","useHistory","clickMe","restaurant","id","process","restaurants","fetchRestaurants","map","onClick","bind","name","timeAlert","showdate","Date","dtdt","toDateString","getHours","alert","Form","setName","address","setAddress","phone","setPhone","foodOrder","setFoodOrder","orderTotal","setOrderTotal","restaurantId","setRestaurantId","localTotalPrice","localStorage","getItem","localRestaurantId","localDataSize","parseLocalDataSize","JSON","parse","orderSubmithandler","event","preventDefault","length","stringify","total","orderCounterFunc","window","clear","onSubmit","value","onChange","e","target","placeholder","type","required","Checkout","props","handleClickBack","goBack","state","list","chosenSize","this","hydrateStateWithLocalStorage","key","hasOwnProperty","setState","item","Component","FoodItem","handleOpenModal","image","Modal","setAppElement","FoodList","handleClickPush","handleCheckbox","checked","checkedValue","chosenTopping","topping","newItem","clicks","showModal","handleCloseModal","handleAddModal","handleChangeSize","addEventListener","saveStateToLocalStorage","removeEventListener","setItem","handleItemState","itemKey","clickedItem","items","find","o","size","price","chosenPrice","parseInt","match","prevChosenPrice","handleItemList","updatedList","filterDeleted","itemsToRender","sizeData","toppingsToRender","toppingData","isOpen","contentLabel","onRequestClose","food","deleteItem","withRouter","LoadingSpinner","asOverlay","Restaurant","loadedFoods","setLoadedFoods","useParams","fetchFoods","onload","Fragment","Login","loginHandler","email","setEmail","password","setPassword","Admin","foodsToRender","setImage","foodId","setFoodId","updateName","setUpdateName","updateEmail","setUpdateEmail","updateImage","setUpdateImage","updateRestaurantId","setUpdateRestaurantId","addFood","setAddFood","addFoodImage","setAddFoodImage","foodCreator","setFoodCreator","addFoodSize","setAddFoodSize","foodSizeName","setFoodSizeName","foodSizePrice","setFoodSizePrice","addTopping","setAddTopping","toppingName","setToppingName","toppingPrice","setToppingPrice","foods","creator","addRestaurant","deleteRestaurant","updateRestaurant","addFoodFunc","deleteFoodFunc","toppings","AdminData","loggedIn","setLoggedIn","loginSubmithandler","App","checkoutRoute","console","log","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.972005a3.chunk.js","sourcesContent":["import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          reqCtrl => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import './MainPage.css';\r\nimport React from 'react';\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <div>\r\n      <img className=\"logo\" src=\"/images/logo.png\" />\r\n      <img className=\"bg-image\" src={'/images/pexel.jpg'} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;","import React, { useEffect, useState } from 'react';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './Home.css';\r\nimport './Title.css';\r\nimport './MainPage.js';\r\nimport MainPage from './MainPage.js';\r\n\r\n \r\nconst Home = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedRestaurants, setLoadedRestaurants] = useState();\r\n  let history = useHistory();\r\n  \r\n\r\n  useEffect(() => {\r\n      const fetchRestaurants = async () => {\r\n        try {\r\n          const responseData = await sendRequest(\r\n            process.env.REACT_APP_BACKEND_URL + '/restaurants'\r\n          );\r\n  \r\n          setLoadedRestaurants(responseData.restaurants);\r\n        } catch (err) {}\r\n      };\r\n      fetchRestaurants();\r\n    }, [sendRequest]);\r\n\r\n\r\n    function clickMe(restaurant) {\r\n        history.push(restaurant.id);\r\n    };\r\n  \r\n\r\n    let restaurantsToRender;\r\n    if(loadedRestaurants) {\r\n        restaurantsToRender = loadedRestaurants.map(restaurant => {\r\n            return <button onClick={clickMe.bind(this, restaurant)} key={restaurant.id}><p>{restaurant.name}</p></button>\r\n        })\r\n    }\r\n\r\n    let showdate=new Date();\r\n    let dtdt=showdate.toDateString();\r\n    let timeAlert;\r\n\r\n    useEffect(() => {\r\n      if(showdate.getHours() > 20 || showdate.getHours() < 9 || showdate.getHours() == 20 || dtdt[0] == \"s\" && dtdt[1] == \"u\"){\r\n        timeAlert = alert(\"Ne radimo od 21:00 do 09:00 i nedeljom\");\r\n      }\r\n    }, [sendRequest]);\r\n\r\n  return (\r\n    <>\r\n    {timeAlert}\r\n    <div className=\"restaurant-list\">\r\n      {restaurantsToRender}\r\n    </div>\r\n    < MainPage/>\r\n\r\n    <div className=\"title-container\">\r\n      <div className=\"home-box\">\r\n\r\n          <div className=\"title\">\r\n              <span className=\"block\"></span>\r\n              <h1 className=\"title-text\">Naruči hranu i uživaj!<span></span></h1>\r\n          </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, { useState, useEffect } from \"react\";\r\nimport { useHttpClient } from '../shared/hooks/http-hook';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Form.css';\r\n\r\n\r\nfunction Form() {\r\n  const { sendRequest } = useHttpClient();\r\n  const history = useHistory();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [foodOrder, setFoodOrder] = useState([]);\r\n  const [orderTotal, setOrderTotal] = useState(\"\");\r\n  const [restaurantId, setRestaurantId] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    const localTotalPrice = localStorage.getItem('orderTotal');\r\n    setOrderTotal(localTotalPrice)\r\n\r\n    const localRestaurantId = localStorage.getItem('restaurantId');\r\n    setRestaurantId(localRestaurantId)\r\n\r\n    const localDataSize = localStorage.getItem('list');\r\n    let parseLocalDataSize = JSON.parse(localDataSize);\r\n    setFoodOrder(parseLocalDataSize)\r\n  }, [name])\r\n\r\n\r\n  const orderSubmithandler = async event => {\r\n    event.preventDefault();\r\n    if(name.length > 3 && phone.length > 3 && address.length > 3){\r\n      try {\r\n        await sendRequest(\r\n          (process.env.REACT_APP_BACKEND_URL + '/orders/'),\r\n          'POST',\r\n          JSON.stringify({\r\n            name: name,\r\n            phone: phone,\r\n            address: address,\r\n            foodOrder: foodOrder,\r\n            total: orderTotal,\r\n            restaurantId: restaurantId\r\n          }),\r\n          { 'Content-Type': 'application/json' }\r\n        );\r\n        alert(\"Uspjesno ste narucili\")\r\n        orderCounterFunc();\r\n      } catch (err) {}\r\n    } else{ alert(\"Provjerite vase podatke\")}\r\n  }\r\n\r\n  \r\n  const orderCounterFunc = async () => {\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + '/restaurants/counter',\r\n        'PATCH',\r\n        JSON.stringify({\r\n          restaurantId: restaurantId\r\n        }),\r\n        { 'Content-Type': 'application/json' }\r\n      );\r\n      window.localStorage.clear();\r\n      history.push('/');\r\n    } catch (err) {}\r\n  }\r\n\r\n  return (\r\n    <form className=\"order-form\" onSubmit={orderSubmithandler}>\r\n      <input\r\n        value={name}\r\n        onChange={e => setName(e.target.value)}\r\n        placeholder=\"Ime i prezime\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        required\r\n      />\r\n      <input\r\n        value={address}\r\n        onChange={e => setAddress(e.target.value)}\r\n        placeholder=\"Adresa\"\r\n        type=\"text\"\r\n        name=\"address\"\r\n        required\r\n      />\r\n      <input\r\n        value={phone}\r\n        onChange={e => setPhone(e.target.value)}\r\n        placeholder=\"Telefon\"\r\n        type=\"text\"\r\n        name=\"phone\"\r\n        required\r\n      />\r\n      <button type=\"submit\">Naruci</button>\r\n    </form>\r\n  );\r\n}\r\nexport default Form;","import Form from '../../../shared/Form';\r\nimport React, { Component } from 'react'\r\nimport MainPage from '../../HomePage/MainPage';\r\nimport './Checkout.css';\r\n\r\nclass Checkout extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state={\r\n      list:[],\r\n      chosenSize:[],\r\n      orderTotal:''\r\n    };\r\n  }\r\n\r\n\r\n   // local storage\r\n   componentDidMount() {\r\n    this.hydrateStateWithLocalStorage();\r\n  }\r\n\r\n  hydrateStateWithLocalStorage() {\r\n    // for all items in state\r\n    for (let key in this.state) {\r\n      // if the key exists in localStorage\r\n      if (localStorage.hasOwnProperty(key)) {\r\n        // get the key's value from localStorage\r\n        let value = localStorage.getItem(key);\r\n\r\n        // parse the localStorage string and setState\r\n        try {\r\n          value = JSON.parse(value);\r\n          this.setState({ [key]: value });\r\n        } catch (e) {\r\n          // handle empty string\r\n          this.setState({ [key]: value });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleClickBack = e => {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <button className=\"back-button\" onClick={this.handleClickBack}>Nazad</button>\r\n      <MainPage/>  \r\n      <Form/>\r\n      <div className=\"order-container\">\r\n            <div className=\"korpa-div\"><p>KORPA</p></div>\r\n           \r\n            {this.state.list.map(item => {\r\n              return(\r\n                <div className=\"item-div\" key={item.id}>\r\n                  {item.name +\" \"+ item.chosenSize +\" \"}\r\n                </div>\r\n              )\r\n            })}\r\n           \r\n            <div className=\"total-div\"><p>Total {this.state.orderTotal} KM</p></div>\r\n          </div>\r\n    \r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Checkout\r\n\r\n\r\n","import React from 'react';\r\nimport './FoodItem.css';\r\n\r\nconst FoodItem = props => {\r\n\r\n  return (\r\n      <div className=\"food-list\">\r\n          <button className=\"food-button\" \r\n            onClick={props.handleOpenModal} id={props.id} >{props.name}\r\n          </button>\r\n          <img className=\"food-img\" src={props.image}/>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default FoodItem;\r\n","import React, { Component, useEffect } from 'react'\r\nimport FoodItem from './FoodItem';\r\nimport Modal from 'react-modal';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport './FoodList.css';\r\nimport MainPage from '../HomePage/MainPage';\r\nModal.setAppElement('#root');\r\n\r\nclass FoodList extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state={\r\n      newItem:'',\r\n      list:[],\r\n      clicks: 1,\r\n      showModal: false,\r\n      chosenSize:\"Izaberite\",\r\n      chosenTopping: '',\r\n      orderTotal: 0,\r\n      restaurantId: this.props.restaurantId\r\n    };\r\n    this.handleOpenModal = this.handleOpenModal.bind(this);\r\n    this.handleCloseModal = this.handleCloseModal.bind(this);\r\n    this.handleAddModal = this.handleAddModal.bind(this);\r\n    this.handleChangeSize = this.handleChangeSize.bind(this);\r\n    this.handleCheckbox = this.handleCheckbox.bind(this);\r\n  }\r\n\r\n  // local storage\r\n  componentDidMount() {\r\n    this.hydrateStateWithLocalStorage();\r\n\r\n    // add event listener to save state to localStorage\r\n    // when user leaves/refreshes the page\r\n    window.addEventListener(\r\n      \"beforeunload\",\r\n      this.saveStateToLocalStorage.bind(this)\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\r\n      \"beforeunload\",\r\n      this.saveStateToLocalStorage.bind(this)\r\n    );\r\n\r\n    // saves if component has a chance to unmount\r\n    this.saveStateToLocalStorage();\r\n  }\r\n\r\n  hydrateStateWithLocalStorage() {\r\n    // for all items in state\r\n    for (let key in this.state) {\r\n      // if the key exists in localStorage\r\n      if (localStorage.hasOwnProperty(key)) {\r\n        // get the key's value from localStorage\r\n        let value = localStorage.getItem(key);\r\n\r\n        // parse the localStorage string and setState\r\n        try {\r\n          value = JSON.parse(value);\r\n          this.setState({ [key]: value });\r\n        } catch (e) {\r\n          // handle empty string\r\n          this.setState({ [key]: value });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  saveStateToLocalStorage() {\r\n    // for every item in React state\r\n    for (let key in this.state) {\r\n      // save to localStorage\r\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\r\n    }\r\n  }\r\n\r\n  handleOpenModal (e) {\r\n    this.setState({ showModal: true });\r\n    this.setState({ newItem: {\r\n      id: e.target.id\r\n     }},() => this.handleItemState());\r\n    this.setState({chosenTopping: \"\"});\r\n  }\r\n\r\n  handleItemState () {\r\n   const itemKey = this.state.newItem.id;\r\n   const arrayKey = this.props.items;\r\n\r\n   let clickedItem = arrayKey.find(o => o.id === itemKey);\r\n\r\n   this.setState({ newItem: {\r\n     id: clickedItem.id,\r\n     size: clickedItem.size.map(clickedItem => ([clickedItem.name, clickedItem.price])),\r\n     topping: clickedItem.topping.map(clickedItem => ([clickedItem.name, clickedItem.price])),\r\n   }})\r\n  } \r\n\r\n  handleAddModal() {\r\n    if (this.state.chosenSize == \"Izaberite\" || ''){\r\n      alert(\"Izaberite velicinu\")\r\n      return;\r\n    }\r\n    const itemKey = this.state.newItem.id;\r\n    const arrayKey = this.props.items;\r\n    let clickedItem = arrayKey.find(o => o.id === itemKey);\r\n\r\n    this.setState({ showModal: false });  \r\n    this.setState({ clicks: this.state.clicks + 1 });\r\n    \r\n    let chosenPrice = parseInt(this.state.chosenSize.match(/\\d+/g));\r\n    let prevChosenPrice = parseInt(this.state.orderTotal);\r\n    this.setState({ orderTotal: prevChosenPrice += chosenPrice })\r\n\r\n    this.setState({ newItem: {\r\n      name: clickedItem.name,\r\n      image: clickedItem.image,\r\n      id: clickedItem.id + this.state.clicks,\r\n      size: clickedItem.size.map(clickedItem => ([clickedItem.name, clickedItem.price])),\r\n      chosenSize: this.state.chosenSize,\r\n      chosenTopping: ([this.state.chosenTopping]),\r\n     }},() => this.handleItemList());\r\n  }\r\n\r\n  handleItemList() {\r\n    const list = [...this.state.list]\r\n    list.push(this.state.newItem);\r\n    this.setState({list, newItem:\"\"})\r\n    this.setState({ chosenSize: \"Izaberite\"})\r\n  }\r\n\r\n  handleChangeSize(e){\r\n    this.setState({ chosenSize: e.target.value})\r\n  }\r\n  \r\n  handleCloseModal () {\r\n    this.setState({ showModal: false });\r\n  }\r\n\r\n  deleteItem(id){\r\n    const list = [...this.state.list];\r\n    const updatedList = list.filter(item => item.id !== id);\r\n    this.setState({list: updatedList});\r\n\r\n    const filterDeleted = list.filter(item => item.id === id);\r\n\r\n    let chosenPrice = parseInt(filterDeleted[0].chosenSize.match(/\\d+/g));\r\n    let prevChosenPrice = parseInt(this.state.orderTotal);\r\n    this.setState({ orderTotal: prevChosenPrice -= chosenPrice })\r\n  }\r\n\r\n  handleClickPush = e => {\r\n    let showdate=new Date();\r\n    let dtdt=showdate.toDateString();\r\n    let timeAlert;\r\n    if(showdate.getHours() > 20 || showdate.getHours() < 9 || showdate.getHours() == 20 || dtdt[0] == \"s\" && dtdt[1] == \"u\"){\r\n      timeAlert = alert(\"Ne radimo od 21:00 do 09:00 i nedeljom\")\r\n      return;\r\n    }\r\n    if(this.state.list.length === 0){\r\n      alert(\"Izaberite hranu koju zelite naruciti\")\r\n      return;\r\n    }\r\n    \r\n    this.props.history.push(\"/checkout\");\r\n  };\r\n\r\n  handleClickBack = e => {\r\n    this.props.history.push(\"/\");\r\n  }\r\n\r\n  handleCheckbox = (e) => {\r\n    // to find out if it's checked or not; returns true or false\r\n    const checked = e.target.checked;\r\n    // to get the checked value\r\n    const checkedValue = e.target.value;\r\n    if (checked == true) {\r\n      this.setState({ chosenTopping: [...this.state.chosenTopping, checkedValue] })\r\n    } \r\n    // to delete the unchecked value\r\n    if ( checked == false) {\r\n      this.setState({chosenTopping: this.state.chosenTopping.filter(function(topping) { \r\n        return topping !== checkedValue\r\n    })});\r\n    } \r\n    };\r\n\r\n  render() {\r\n    let sizeData = this.state.newItem.size\r\n    let itemsToRender\r\n\r\n    if (sizeData) {\r\n      itemsToRender = sizeData.map(item => {\r\n        return <option key={item}>{item[0]} {item[1] +\" KM\"}</option>\r\n      });\r\n    }\r\n\r\n    let toppingData = this.state.newItem.topping\r\n    let toppingsToRender\r\n\r\n    if (toppingData){\r\n      toppingsToRender = toppingData.map(item => {\r\n        return <label key={item} className=\"topping\"> \r\n            <p>{item[0]}</p>\r\n            <input onChange={this.handleCheckbox} type=\"checkbox\" id={item[0]} name={item} value={item[0]} />\r\n        </label> \r\n      });\r\n    }\r\n\r\n    return (\r\n      <> \r\n      <MainPage/>\r\n      <button className=\"back-button\" onClick={this.handleClickBack}>Nazad</button>\r\n      <div>\r\n        <Modal \r\n           isOpen={this.state.showModal}\r\n           contentLabel=\"onRequestClose Example\"\r\n           onRequestClose={this.handleCloseModal}\r\n           className=\"food-modal\">\r\n\r\n          <div className=\"modal-select\">\r\n          <select onChange={this.handleChangeSize}>\r\n              <option>Izaberite</option>\r\n              {itemsToRender}</select>\r\n          </div>\r\n          <div className=\"modal-button\">\r\n            <button onClick={this.handleCloseModal}>Nazad</button>\r\n            <button onClick={this.handleAddModal}>Dodaj u korpu</button>\r\n          </div>\r\n          <div className=\"topping-container\">\r\n            {toppingsToRender}\r\n          </div>\r\n        </Modal>\r\n\r\n        <div className=\"food-item-container\">\r\n        {this.props.items.map(food => (\r\n            <FoodItem\r\n              key={food.id}\r\n              id={food.id}\r\n              name={food.name}\r\n              image={food.image}\r\n              handleOpenModal={this.handleOpenModal}/>\r\n        ))}\r\n        </div>\r\n        \r\n        <div className=\"order-container\">\r\n            <div className=\"korpa-div\"><p>KORPA</p></div>\r\n           \r\n            {this.state.list.map(item => {\r\n              return(\r\n                <div className=\"item-div\" key={item.id}>\r\n                  {item.name +\" \"+ item.chosenSize +\" \"}\r\n                  <button onClick={() => this.deleteItem(item.id)}>X</button>\r\n                </div>\r\n              )\r\n            })}\r\n           \r\n            <div className=\"total-div\"><p>Total {this.state.orderTotal} KM</p></div>\r\n            <div className=\"order-button\"><button onClick={this.handleClickPush}>Naruci</button></div>\r\n          </div>    \r\n      </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter (FoodList);","import React from 'react';\r\n\r\nimport './LoadingSpinner.css';\r\n\r\nconst LoadingSpinner = props => {\r\n  return (\r\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\r\n      <div className=\"lds-dual-ring\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;","import React, { useEffect, useState } from 'react';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { useParams } from 'react-router-dom';\r\nimport FoodList from './FoodList';\r\nimport LoadingSpinner from '../../shared/LoadingSpinner';\r\n\r\n\r\nconst Restaurant = () => {\r\n    const { isLoading, sendRequest } = useHttpClient();\r\n    const [loadedFoods, setLoadedFoods] = useState();\r\n    const restaurantId = useParams().restaurantId;\r\n    \r\n\r\n    useEffect(() => {\r\n        const fetchFoods = async () => {\r\n          try {\r\n            const responseData = await sendRequest(\r\n                process.env.REACT_APP_BACKEND_URL + `/foods/${restaurantId}`\r\n            );\r\n            setLoadedFoods(responseData.food);\r\n          } catch (err) {}\r\n        };\r\n        fetchFoods(); \r\n        window.onload = window.localStorage.clear();  \r\n      }, [sendRequest, restaurantId]);\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isLoading && (\r\n                <div className=\"center\">\r\n                    <LoadingSpinner />\r\n                </div>\r\n            )}\r\n\r\n            {!isLoading && loadedFoods && (\r\n                <FoodList restaurantId={restaurantId} items={loadedFoods}/>\r\n            )}   \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Restaurant;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n\r\nconst Login = props => {\r\n  return (\r\n    <>\r\n        <form className=\"order-form\" onSubmit={props.loginHandler}>\r\n        <input\r\n          value={props.email}\r\n          onChange={e => props.setEmail(e.target.value)}\r\n          placeholder=\"Email\"\r\n          type=\"text\"\r\n          name=\"email\"\r\n          required\r\n        />\r\n        <input\r\n          value={props.password}\r\n          onChange={e => props.setPassword(e.target.value)}\r\n          placeholder=\"Password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\nexport default Login;","import React, { useState, useEffect } from \"react\";\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\n const Admin = () => {\r\n    const { sendRequest } = useHttpClient();\r\n    const [loadedRestaurants, setLoadedRestaurants] = useState();\r\n    const [loadedFoods, setLoadedFoods] = useState();\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n\r\n    const [restaurantId, setRestaurantId] = useState(\"\");\r\n    const [foodId, setFoodId] = useState(\"\");\r\n\r\n    const [updateName, setUpdateName] = useState(\"\");\r\n    const [updateEmail, setUpdateEmail] = useState(\"\");\r\n    const [updateImage, setUpdateImage] = useState(\"\");\r\n    const [updateRestaurantId, setUpdateRestaurantId] = useState(\"\");\r\n\r\n    const [addFood, setAddFood] = useState(\"\");\r\n    const [addFoodImage, setAddFoodImage] = useState(\"\");\r\n    const [foodCreator, setFoodCreator] = useState(\"\");\r\n\r\n    const [addFoodSize, setAddFoodSize] = useState([]);\r\n    const [foodSizeName, setFoodSizeName] = useState(\"\");\r\n    const [foodSizePrice, setFoodSizePrice] = useState(\"\");\r\n\r\n    const [addTopping, setAddTopping] = useState([]);\r\n    const [toppingName, setToppingName] = useState(\"\");\r\n    const [toppingPrice, setToppingPrice] = useState(\"\");\r\n\r\n\r\n    const arrayTopping = () => {\r\n      setAddTopping([...addTopping, {\r\n        name: toppingName,\r\n        price: toppingPrice\r\n      }])\r\n    }\r\n\r\n    const arraySize = () => {\r\n      setAddFoodSize([...addFoodSize, {\r\n        name: foodSizeName,\r\n        price: foodSizePrice\r\n      }])\r\n    }\r\n\r\n    const handleReset = () => {\r\n      setAddTopping([]);\r\n      setAddFoodSize([]);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n      const fetchFoods = async () => {\r\n        try {\r\n          const responseData = await sendRequest(\r\n            process.env.REACT_APP_BACKEND_URL + '/api/foods'\r\n          );\r\n  \r\n          setLoadedFoods(responseData.foods);\r\n        } catch (err) {}\r\n      };\r\n      fetchFoods();\r\n  }, [sendRequest]);\r\n\r\n  let foodsToRender;\r\n  if(loadedFoods) {\r\n    foodsToRender = loadedFoods.map(food => {\r\n          return <p key={food.id}>{food.name} | = | Food Creator: {food.creator}| = | Food ID: {food.id}</p>\r\n      })\r\n  } \r\n    \r\n    \r\n    useEffect(() => {\r\n        const fetchRestaurants = async () => {\r\n          try {\r\n            const responseData = await sendRequest(\r\n              process.env.REACT_APP_BACKEND_URL + '/restaurants'\r\n            );\r\n    \r\n            setLoadedRestaurants(responseData.restaurants);\r\n          } catch (err) {}\r\n        };\r\n        fetchRestaurants();\r\n    }, [sendRequest]);\r\n\r\n      let restaurantsToRender;\r\n        if(loadedRestaurants) {\r\n            restaurantsToRender = loadedRestaurants.map(restaurant => {\r\n                return <p key={restaurant.id}>{restaurant.name}_______{restaurant.id}______{restaurant.image}</p>\r\n            })\r\n        } \r\n        \r\n        const addRestaurant = async event => {\r\n            event.preventDefault();\r\n            try {\r\n              await sendRequest(\r\n                process.env.REACT_APP_BACKEND_URL + '/restaurants/',\r\n                'POST',\r\n                JSON.stringify({\r\n                  name: name,\r\n                  email: email,\r\n                  image: image\r\n                }),\r\n                { 'Content-Type': 'application/json' }\r\n              );\r\n              alert(\"Restaurant Added\")\r\n            } catch (err) {}\r\n          }\r\n\r\n          const deleteRestaurant = async event => {\r\n            event.preventDefault();\r\n            try {\r\n              await sendRequest(\r\n                process.env.REACT_APP_BACKEND_URL + '/restaurants/delete',\r\n                'DELETE',\r\n                JSON.stringify({\r\n                  restaurantId: restaurantId\r\n                }),\r\n                { 'Content-Type': 'application/json' }\r\n              );\r\n              alert(\"Restaurant Deleted\")\r\n            } catch (err) {}\r\n          }\r\n\r\n          const updateRestaurant = async event => {\r\n            event.preventDefault();\r\n            try {\r\n              await sendRequest(\r\n                process.env.REACT_APP_BACKEND_URL + '/restaurants/update',\r\n                'PATCH',\r\n                JSON.stringify({\r\n                  updateRestaurantId: updateRestaurantId,\r\n                  updateName: updateName,\r\n                  updateEmail: updateEmail,\r\n                  updateImage: updateImage\r\n                }),\r\n                { 'Content-Type': 'application/json' }\r\n              );\r\n              alert(\"Restaurant Updated\")\r\n            } catch (err) {}\r\n          }\r\n\r\n\r\n          const addFoodFunc = async event => {\r\n            event.preventDefault();\r\n            try {\r\n              await sendRequest(\r\n                process.env.REACT_APP_BACKEND_URL + '/foods/create',\r\n                'POST',\r\n                JSON.stringify({\r\n                  name: addFood,\r\n                  size: addFoodSize,\r\n                  topping: addTopping,\r\n                  image: addFoodImage,\r\n                  creator: foodCreator\r\n                }),\r\n                { 'Content-Type': 'application/json' }\r\n              );\r\n              alert(\"Food Added\")\r\n            } catch (err) {}\r\n          }\r\n          const deleteFoodFunc = async event => {\r\n            event.preventDefault();\r\n            try {\r\n              await sendRequest(\r\n                process.env.REACT_APP_BACKEND_URL + '/foods/delete',\r\n                'DELETE',\r\n                JSON.stringify({\r\n                  foodId: foodId\r\n                }),\r\n                { 'Content-Type': 'application/json' }\r\n              );\r\n              alert(\"Food Deleted\")\r\n            } catch (err) {}\r\n          }\r\n          \r\n          // var showdate=new Date();\r\n          // var dt=showdate.toDateString();\r\n          // var displaytime;\r\n\r\n          // if(showdate.getHours() > 9 ) {\r\n          //   displaytime=showdate.getHours()+':'+showdate.getMinutes()\r\n          // } else {\r\n          //   displaytime = \"\";\r\n          // }\r\n       \r\n\r\n        return (\r\n            <>\r\n            {/* {dt} - {displaytime} */}\r\n            <form onSubmit={addRestaurant} >\r\n            <h1>ADD RESTAURANTS</h1>\r\n            <input\r\n                value={name}\r\n                onChange={e => setName(e.target.value)}\r\n                placeholder=\"name\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                required\r\n            />\r\n            <input\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}\r\n                placeholder=\"Email\"\r\n                type=\"text\"\r\n                name=\"email\"\r\n                required\r\n            />\r\n            <input\r\n                value={image}\r\n                onChange={e => setImage(e.target.value)}\r\n                placeholder=\"Image\"\r\n                type=\"text\"\r\n                name=\"image\"\r\n                required\r\n            />\r\n            <button type=\"submit\">Apply</button>\r\n            </form>\r\n\r\n\r\n            <form onSubmit={deleteRestaurant} >\r\n            <h1>DELETE RESTAURANTS</h1>\r\n            <input\r\n                value={restaurantId}\r\n                onChange={e => setRestaurantId(e.target.value)}\r\n                placeholder=\"restaurantId\"\r\n                type=\"text\"\r\n                name=\"restaurantId\"\r\n                required\r\n            />\r\n            <button type=\"submit\">Delete</button>\r\n            </form>\r\n\r\n\r\n            <form onSubmit={updateRestaurant} >\r\n            <h1>UPDATE RESTAURANTS</h1>\r\n            <input\r\n                value={updateName}\r\n                onChange={e => setUpdateName(e.target.value)}\r\n                placeholder=\"name\"\r\n                type=\"text\"\r\n                name=\"updatename\"\r\n                required\r\n            />\r\n            <input\r\n                value={updateEmail}\r\n                onChange={e => setUpdateEmail(e.target.value)}\r\n                placeholder=\"Email\"\r\n                type=\"text\"\r\n                name=\"updateEmail\"\r\n                required\r\n            />\r\n            <input\r\n                value={updateImage}\r\n                onChange={e => setUpdateImage(e.target.value)}\r\n                placeholder=\"Image\"\r\n                type=\"text\"\r\n                name=\"updateimage\"\r\n                required\r\n            />\r\n               <input\r\n                value={updateRestaurantId}\r\n                onChange={e => setUpdateRestaurantId(e.target.value)}\r\n                placeholder=\"RestaurantId\"\r\n                type=\"text\"\r\n                name=\"updaterestaurantId\"\r\n                required\r\n            />\r\n            <button type=\"submit\">Update</button>\r\n            </form>\r\n\r\n            <br />\r\n           <form>\r\n            <h1>size and toppings</h1>\r\n            <input\r\n                value={foodSizeName}\r\n                onChange={e => setFoodSizeName(e.target.value)}\r\n                placeholder=\"size name\"\r\n                type=\"text\"\r\n                name=\"size\"\r\n                required\r\n            />\r\n            <input\r\n                value={foodSizePrice}\r\n                onChange={e => setFoodSizePrice(e.target.value)}\r\n                placeholder=\"size price\"\r\n                type=\"text\"\r\n                name=\"size\"\r\n                required\r\n            />\r\n              <input\r\n                value={toppingName}\r\n                onChange={e => setToppingName(e.target.value)}\r\n                placeholder=\"topping name\"\r\n                type=\"text\"\r\n                name=\"topping\"\r\n                required\r\n            />\r\n              <input\r\n                value={toppingPrice}\r\n                onChange={e => setToppingPrice(e.target.value)}\r\n                placeholder=\"topping price\"\r\n                type=\"text\"\r\n                name=\"price\"\r\n                required\r\n            />\r\n            <button onClick={arraySize}>ADD</button>\r\n            <button onClick={arrayTopping}>ADD</button>\r\n            <button onClick={handleReset}>CLEAR</button>\r\n            </form>\r\n\r\n            <form onSubmit={addFoodFunc}>\r\n            <h1>ADD FOOD</h1>\r\n            <input\r\n                value={addFood}\r\n                onChange={e => setAddFood(e.target.value)}\r\n                placeholder=\"name\"\r\n                type=\"text\"\r\n                name=\"addFood\"\r\n                required\r\n            />\r\n            <input\r\n                value={addFoodImage}\r\n                onChange={e => setAddFoodImage(e.target.value)}\r\n                placeholder=\"image\"\r\n                type=\"text\"\r\n                name=\"image\"\r\n                required\r\n            />\r\n              <input\r\n                value={foodCreator}\r\n                onChange={e => setFoodCreator(e.target.value)}\r\n                placeholder=\"creator\"\r\n                type=\"text\"\r\n                name=\"creator\"\r\n                required\r\n            />\r\n            <button type=\"submit\">ADD FOOD</button>\r\n            </form>\r\n\r\n            <form onSubmit={deleteFoodFunc}>\r\n            <h1>DELETE FOOD</h1>\r\n            <input\r\n                value={foodId}\r\n                onChange={e => setFoodId(e.target.value)}\r\n                placeholder=\"food Id\"\r\n                type=\"text\"\r\n                name=\"foodid\"\r\n                required\r\n            />\r\n            <button>Delete</button>\r\n            </form>\r\n            <div>           \r\n                {addTopping.map(toppings => (\r\n                  <div className=\"station\" key={toppings.name}>{toppings.name} - {toppings.price} KM</div>\r\n                ))}\r\n                {addFoodSize.map(foods => (\r\n                  <div className=\"station\" key={foods.name}>{foods.name} - {foods.price} KM</div>\r\n                ))}\r\n                {foodsToRender}\r\n                <br />\r\n                {restaurantsToRender}\r\n            </div>\r\n            </>\r\n        )\r\n}\r\n\r\nexport default Admin\r\n\r\n\r\n\r\n  \r\n\r\n","import React, { useState } from 'react'\r\nimport Login from './Login';\r\nimport Admin from './Admin';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\nconst AdminData = props => {\r\n  const { sendRequest } = useHttpClient();\r\n  const [loggedIn, setLoggedIn] = useState(false); \r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n\r\n  const loginSubmithandler = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      const response = await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + \"/admin/login\",\r\n        'POST',\r\n        JSON.stringify({\r\n          email: email,\r\n          password: password\r\n        }),\r\n        { 'Content-Type': 'application/json' }\r\n      );\r\n      setLoggedIn(response);\r\n    } catch (err) {}\r\n  }\r\n\r\n        return (\r\n            <>\r\n            {loggedIn ? (\r\n               <Admin />\r\n            ) : (\r\n              <Login loginHandler={loginSubmithandler}\r\n              setEmail={setEmail}\r\n              setPassword={setPassword}\r\n              email={email}\r\n              password={password} />\r\n            )}\r\n            </>\r\n        )\r\n}\r\n\r\nexport default AdminData;\r\n","import './App.css';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport React, { useEffect } from \"react\";\nimport Home from './components/pages/HomePage/Home';\nimport Checkout from './components/pages/RestaurantPage/CheckoutPage/Checkout';\nimport Restaurant from './components/pages/RestaurantPage/Restaurant';\nimport AdminData from './components/pages/AdminPage/AdminData';\n\n\n\n\nfunction App() {\n  let showdate=new Date();\n  let dtdt=showdate.toDateString();\n  let checkoutRoute;\n\n  if(showdate.getHours() > 20 || showdate.getHours() < 9 || showdate.getHours() == 20 || dtdt[0] == \"s\" && dtdt[1] == \"u\"){\n    console.log(\"ne radimo trenutno\")\n  }else{\n    checkoutRoute = <Route path='/checkout' exact component={Checkout} />\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <Route path='/admin' exact component={AdminData} />\n        <Route path='/' exact component={Home} />\n        {checkoutRoute}\n        {/* <Route path='/checkout' exact component={Checkout} /> */}\n        <Route path='/:restaurantId' component={Restaurant} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}